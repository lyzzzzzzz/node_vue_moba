@import './variable';
//reset
* {
  box-sizing: border-box;
  outline   : none;
}

html {
  font-size: 13px;
}

body {
  margin     : 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background : #F1F1F1;
  
}

a {
  color: #999;
}


@each $colorKey,$color in $colors {
  .text-#{$colorKey} {
    color: $color;
  }
  .bg-#{$colorKey} {
    background-color: $color;
  }
}


//text align
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var !important;
  }
}


@each $sizeKey,$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size*$base-font-sizes;
  }
}

//button
.btn{
  border: none;
  height: 1.769rem;
  font-size: map-get($font-sizes , 'sm' );
  border-radius: 0.153rem;
}

//flex
.d-flex{
  display: flex;
}

.flex-column{
  flex-direction: column;
}


@each $key,$val in $flex-jc {
  .jc-#{$key}{
    justify-content:$val;
  }
}

@each $key,$val in $flex-ai {
  .ai-#{$key}{
    align-items:$val;
  }
}

.flex-1{
  flex: 1;
}


  @each $typeKey,$type in $spacing-types {
   //.m-1
   @each $sizeKey,$size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey}{
      #{$type} :$size*$spacing-base
     };
  }
  //.mx-1
  @each $sizeKey,$size in $spacing-sizes {
    .#{$typeKey}x-#{$sizeKey}{
      #{$type}-left :$size*$spacing-base;
      #{$type}-right :$size*$spacing-base
     };
  }
   //.my-1
   @each $sizeKey,$size in $spacing-sizes {
    .#{$typeKey}y-#{$sizeKey}{
      #{$type}-top :$size*$spacing-base;
      #{$type}-bottom :$size*$spacing-base
     };
  }

    //.mt-1
    @each $directionkey,$direction in $spacing-directions {
        @each $sizeKey,$size in $spacing-sizes {
          .#{$typeKey}#{$directionkey}-#{$sizeKey}{
            #{$type}-#{$direction}:$size*$spacing-base
           }
        }
    }
  }

//nav
.nav{
  .nav-item{
    border-bottom: 0.230rem solid transparent;
    padding-bottom: 0.2rem;
    &.active{
      border-bottom: 0.230rem solid #fff;
    }
  }

}

 //width  height
 .w-100{
   width: 100%;
 }
 .h-100{
   height: 100%;
 }